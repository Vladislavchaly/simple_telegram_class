<?php

/**
 * Class Api1c
 */
class Api1c
{
    /**
     * @var
     */
    private $api_url;
    private $username;
    private $password;

    /**
     * Api1c constructor.
     * @param $api_url
     * @param $username
     * @param $password
     */
    function __construct($api_url, $username, $password)
    {
        $this->api_url = $api_url;
        $this->username = $username;
        $this->password = $password;
    }

    /**
     * @param $phone
     * @return bool|string
     */
    public function start($phone)
    {
        return $this->requestGET('Start', $phone);

    }

    /**
     * @param $id
     * @param $club_id
     * @return mixed
     */
    public function get_info_list_all($id, $club_id)
    {
        $get_info_list_all =  $this->requestPOST('get_info_list_all', ['id' => $id, 'club_id' => $club_id]);
        foreach ($get_info_list_all as $shedules){
            foreach ($shedules as $shedule);
        }
        return $shedule;
    }


    public function removeBOM($data)
    {
        if (0 === strpos(bin2hex($data), 'efbbbf')) {
            return substr($data, 3);
        }
        return $data;
    }
    /**
     * @param $method
     * @param $posts
     * @return bool|string
     */
    public function requestPOST($method, $posts)
    {

        $ch = curl_init();
        $url = $this->api_url . '/' . $method . "/";
        $username = $this->username;
        $password = $this->password;

        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_BASIC);
        curl_setopt($ch, CURLOPT_USERPWD, "$username:$password");
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($posts));

        $headers = array();
        $headers[] = 'Content-Type: application/json';
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = curl_exec($ch);
        $result = $this->removeBOM($result);
        $result =json_decode($result,true);
        if (curl_errno($ch)) {
            echo 'Error:' . curl_error($ch);
        }
        curl_close($ch);
        return $result;
    }

    /**
     * @param $method
     * @param $parameter
     * @return bool|string
     */
    public function requestGET($method, $parameter)
    {
        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
        $ch = curl_init();
        $url = $this->api_url . '/' . $method . "/" . $parameter;
        $username = $this->username;
        $password = $this->password;

        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_BASIC);
        curl_setopt($ch, CURLOPT_USERPWD, "$username:$password");
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

        $headers = array();
        $headers[] = 'Content-Type: application/json';
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

        $result = curl_exec($ch);
        $result =  $this->removeBOM($result);
        $result =json_decode($result,true);
        if (curl_errno($ch)) {
            echo 'Error:' . curl_error($ch);
        }
        curl_close($ch);

        return $result;
    }


}